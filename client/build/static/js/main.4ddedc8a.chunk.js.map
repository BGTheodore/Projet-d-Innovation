{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","margin","spacing","ContainedButtons","classes","className","Box","display","justifyContent","alignItems","Typography","variant","component","gutterBottom","CardMedia","sx","height","width","image","Button","color","type","hidden","m","noValidate","autoComplete","TextField","id","label","minHeight","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kRASMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ,QAAS,CACPC,OAAQF,EAAMG,QAAQ,SAQb,SAASC,IACtB,IAAMC,EAAUP,IAEhB,OAEE,yBAAKQ,UAAWD,EAAQJ,MAE5B,kBAACM,EAAA,EAAD,CACEC,QAAQ,OACRC,eAAe,SACfC,WAAW,UAGb,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,MAAMC,cAAY,GAArD,kDAKA,kBAACP,EAAA,EAAD,CACAC,QAAQ,OACRC,eAAe,SACfC,WAAW,UACX,kBAACK,EAAA,EAAD,CACQF,UAAU,MAEVG,GAAI,CACJC,OAAQ,IACRC,MAAO,KAEPC,MAAM,sEAKd,kBAACZ,EAAA,EAAD,CACMC,QAAQ,OACRC,eAAe,SACfC,WAAW,UAKX,kBAACU,EAAA,EAAD,CAAQR,QAAQ,YAAYS,MAAM,UAAUR,UAAU,SAAtD,2BAEG,2BACHS,KAAK,OACLC,QAAM,MAOR,kBAAChB,EAAA,EAAD,CACEM,UAAU,OACVL,QAAQ,OACRC,eAAe,SACfC,WAAW,SACXM,GAAI,CACF,kBAAmB,CAAEQ,EAAG,EAAGN,MAAO,SAEpCO,YAAU,EACVC,aAAa,OAEb,kBAACC,EAAA,EAAD,CAAWC,GAAG,iBAAiBC,MAAM,MAAMjB,QAAQ,cAKrD,kBAACL,EAAA,EAAD,CACEM,UAAU,OACVL,QAAQ,OACRC,eAAe,SACfC,WAAW,SACXM,GAAI,CACF,kBAAmB,CAAEQ,EAAG,EAAGN,MAAO,SAEpCO,YAAU,EACVC,aAAa,OAEb,kBAACC,EAAA,EAAD,CAAWC,GAAG,iBAAiBC,MAAM,MAAMjB,QAAQ,cAKrD,kBAACL,EAAA,EAAD,CACEM,UAAU,OACVL,QAAQ,OACRC,eAAe,SACfC,WAAW,SACXM,GAAI,CAAE,kBAAmB,CAAEQ,EAAG,EAAGN,MAAO,SAIxCO,YAAU,EACVC,aAAa,OAEb,kBAACC,EAAA,EAAD,CAAWC,GAAG,iBAAiBC,MAAM,QAAQjB,QAAQ,cAGvD,kBAACL,EAAA,EAAD,CACEM,UAAU,OACVL,QAAQ,OACRC,eAAe,SACfC,WAAW,SACXM,GAAI,CACF,kBAAmB,CAAEQ,EAAG,EAAGN,MAAO,SAIpCO,YAAU,EACVC,aAAa,OAEb,kBAACC,EAAA,EAAD,CAAWC,GAAG,iBAAiBC,MAAM,UAAUjB,QAAQ,cAGzD,kBAACL,EAAA,EAAD,CACFC,QAAQ,OACRC,eAAe,SACfC,WAAW,SACXoB,UAAU,WC5IZ,IAYeC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4ddedc8a.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\nimport CardMedia from '@mui/material/CardMedia';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n     \n    },\n\n  },\n  \n}));\n\nexport default function ContainedButtons() {\n  const classes = useStyles();\n\n  return (\n     \n    <div className={classes.root}>\n\n<Box\n  display=\"flex\"\n  justifyContent=\"center\"\n  alignItems=\"center\"\n\n>\n<Typography variant=\"h4\" component=\"div\" gutterBottom>\n         Partagez avec nous vos adresses coup de coeur\n      </Typography>\n</Box>\n    \n<Box\ndisplay=\"flex\"\njustifyContent=\"center\"\nalignItems=\"center\">\n<CardMedia\n        component=\"img\"\n        \n        sx={{\n        height: 233,\n        width: 350\n        }}\n        image=\"https://www.fenetres-lorenove.fr/images/common/default-image.png\"\n        \n      />\n</Box>\n\n<Box\n      display=\"flex\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n    \n    \n    >\n\n      <Button variant=\"contained\" color=\"primary\" component=\"label\" >\n         Veuillez charger un logo\n         <input\n      type=\"file\"\n      hidden\n      />\n      </Button>\n      </Box>\n      \n    \n\n    <Box\n      component=\"form\"\n      display=\"flex\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      sx={{\n        '& > :not(style)': { m: 1, width: '50ch' },\n      }}\n      noValidate\n      autoComplete=\"off\"\n    >\n      <TextField id=\"outlined-basic\" label=\"nom\" variant=\"standard\" />\n     \n    </Box>\n\n\n    <Box\n      component=\"form\"\n      display=\"flex\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      sx={{\n        '& > :not(style)': { m: 1, width: '50ch' },\n      }}\n      noValidate\n      autoComplete=\"off\"\n    >\n      <TextField id=\"outlined-basic\" label=\"tel\" variant=\"standard\" />\n     \n    </Box>\n\n\n    <Box\n      component=\"form\"\n      display=\"flex\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      sx={{ '& > :not(style)': { m: 1, width: '50ch' },\n    \n      \n      }}\n      noValidate\n      autoComplete=\"off\"\n    >\n      <TextField id=\"outlined-basic\" label=\"email\" variant=\"standard\" />\n     \n    </Box>\n    <Box\n      component=\"form\"\n      display=\"flex\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      sx={{\n        '& > :not(style)': { m: 1, width: '50ch' },\n      \n      \n      }}\n      noValidate\n      autoComplete=\"off\"\n    >\n      <TextField id=\"outlined-basic\" label=\"adresse\" variant=\"standard\" />\n     \n    </Box>\n    <Box\n  display=\"flex\"\n  justifyContent=\"center\"\n  alignItems=\"center\"\n  minHeight=\"100vh\"\n>\n\n</Box>\n\n    \n     \n     \n    \n    </div>\n    \n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}